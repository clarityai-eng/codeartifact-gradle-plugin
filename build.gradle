/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/custom_plugins.html
 */

plugins {
    id "com.gradle.plugin-publish" version "0.12.0"

    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'

    // Apply the Groovy plugin to add support for Groovy
    id 'groovy'

    id 'maven-publish'

    // Enables to run "gradle checkUpdates" task to check dependency updates
    id 'name.remal.check-updates' version '1.1.6'

    // Enabled to run "gradle release" task to generates application release
    id 'net.researchgate.release' version '2.8.1'
}

group 'ai.clarity'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    implementation(platform("software.amazon.awssdk:bom:2.15.45"))
    implementation('software.amazon.awssdk:codeartifact')
    implementation('software.amazon.awssdk:sts')
}

gradlePlugin {
    // Define the plugin
    plugins {
        clarity {
            id = 'ai.clarity.codeartifact'
            implementationClass = 'ai.clarity.codeartifact.ClarityCodeartifactPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

pluginBundle {
    website = 'https://github.com/clarityai-eng/codeartifact-gradle-plugin'
    vcsUrl = 'https://github.com/clarityai-eng/codeartifact-gradle-plugin'
    description = 'Login easily to aws codeartifact'
    tags = ['aws', 'codeartifact']

    plugins {
        clarity {
            // id is captured from java-gradle-plugin configuration
            displayName = 'Gradle Codeartifact plugin'
        }
    }
}

release {
    git {
        requireBranch = "main"
    }
}