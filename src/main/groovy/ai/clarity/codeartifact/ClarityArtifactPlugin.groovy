/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package ai.clarity.codeartifact

import org.gradle.api.Plugin
import org.gradle.api.Project
import software.amazon.awssdk.auth.credentials.ProfileCredentialsProvider
import software.amazon.awssdk.regions.Region
import software.amazon.awssdk.services.codeartifact.CodeartifactClient
import software.amazon.awssdk.services.codeartifact.model.GetAuthorizationTokenResponse

/**
 * A simple 'hello world' plugin.
 */
public class ClarityCodeartifactPlugin implements Plugin<Project> {
    public void apply(Project project) {
        // Register a task
        project.tasks.register("greeting") {
            doLast {
                println("Hello from plugin 'clarity.artifact.greeting'")
            }
        }
    }

    public static void setAuthorizationToken(mavenArtifactRepository, String profileName) {
        def result = getAuthorizationToken(mavenArtifactRepository.url, profileName);
        
        mavenArtifactRepository.credentials {
            username "aws"
            password result.authorizationToken()
        }
    }

    public static GetAuthorizationTokenResponse getAuthorizationToken(url, String profileName) {
        String[] domainLevels = url.getHost().split('\\.')
        String artifactDomain = domainLevels[0].substring(0, domainLevels[0].lastIndexOf("-"))
        String artifactOwner = domainLevels[0].substring(domainLevels[0].lastIndexOf("-") + 1)
        String region = domainLevels[domainLevels.length - 3]

        CodeartifactClient client = CodeartifactClient.builder()
                .credentialsProvider(ProfileCredentialsProvider.create(profileName))
                .region(Region.of(region))
                .build();

        GetAuthorizationTokenResponse result = client.getAuthorizationToken({ req -> req.domain(artifactDomain).domainOwner(artifactOwner) });

        return result;
    }
}